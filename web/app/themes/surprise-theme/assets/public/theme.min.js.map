{"version":3,"sources":["theme.min.js"],"names":["openMenu","postData","url","data","String","Math","random","slice","fetch","method","mode","cache","credentials","headers","Content-Type","redirect","referrer","body","then","response","text","getCoords","elem","box","getBoundingClientRect","top","pageYOffset","left","pageXOffset","mobileMenu","btn","document","querySelector","mobmenu","bgoverlay","addEventListener","e","preventDefault","classList","toggle","contains","remove","searchform","forms","form","add","event","target","scrollPost","postHeader","postContainer","window","dist","offsetHeight","innerHeight","progress","scrollY","content","scrollPos"],"mappings":"AACA,IAAIA,UAAW,EAGf,SAASC,SAASC,EAAM,GAAIC,GACZC,OAAOC,KAAKC,UAAUC,MAAM,GAC3C,OAAOC,MAAMN,EAAK,CAChBO,OAAQ,OACRC,KAAM,OACNC,MAAO,WACPC,YAAa,cACbC,QAAS,CAERC,eAAgB,qCAGjBC,SAAU,SACVC,SAAU,cACVC,KAAMd,IAENe,KAAKC,GAAYA,EAASC,QAI7B,SAASC,UAAUC,GACjB,IAAIC,EAAMD,EAAKE,wBAEf,MAAO,CACLC,IAAKF,EAAIE,IAAMC,YACfC,KAAMJ,EAAII,KAAOC,aAMrB,MAAMC,WAAa,KAClB,IAAIC,EAAMC,SAASC,cAAc,wBAC/BC,EAAUF,SAASC,cAAc,uBACnCE,EAAYH,SAASC,cAAc,gBAC/BF,IACHA,EAAIK,iBAAiB,QAAUC,IAC9BA,EAAEC,iBACFJ,EAAQK,UAAUC,OAAO,UACpBT,EAAIQ,UAAUC,OAAO,UAEzBvC,WADGiC,EAAQK,UAAUE,SAAS,UAK/BT,SAASd,KAAKqB,UAAUC,OAAO,UAEhCL,EAAUC,iBAAiB,QAAUC,IACpCpC,UAAW,EACX+B,SAASd,KAAKqB,UAAUG,OAAO,QAC/BR,EAAQK,UAAUG,OAAO,UACzBX,EAAIQ,UAAUG,OAAO,cAMlBC,WAAa,KAClB,IAAOX,SAASY,MAAMD,WAAa,OACnC,IAAIE,EAAOb,SAASY,MAAMD,WAClBE,EAAKZ,cAAc,oBAEtBG,iBAAiB,QAAS,IAAMS,EAAKN,UAAUO,IAAI,oBAExDd,SAASI,iBAAiB,QAAUW,IAC5BF,EAAKJ,SAASM,EAAMC,SAC1BH,EAAKN,UAAUG,OAAO,sBAKnBO,WAAa,KAClB,IAAMjB,SAASd,KAAKqB,UAAUE,SAAS,eAAgB,OAAO,EAE9D,IAAIS,EAAalB,SAASC,cAAc,uBACvCkB,EAAgBnB,SAASC,cAAc,mBAC5BD,SAASC,cAAc,cAGnCmB,OAAOhB,iBAAiB,SAAU,KACjC,IAAIiB,EAAOF,EAAcG,aAAgBF,OAAOG,YAAc,EAE9DC,GADMJ,OAAOK,QAAUnC,UAAUoC,SAAShC,KACzB2B,EAGbG,EAAW,IAAOA,EAAW,GAEhCN,EAAWX,UAAUO,IAAI,UACzBa,UAAY3B,SAASd,KAAKO,wBAAwBC,KAIlDwB,EAAWX,UAAUG,OAAO,aAS9BZ,aACAa,aACAM","file":"theme.min.js","sourcesContent":["// Variables\r\nlet openMenu = false;\r\n\r\n// PARSE POST DATA\r\nfunction postData(url = '', data) {\r\n\tvar boundary = String(Math.random()).slice(2); // needed for form data\r\n\treturn fetch(url, {\r\n\t\t\tmethod: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n\t\t\tmode: 'cors', // no-cors, cors, *same-origin\r\n\t\t\tcache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n\t\t\tcredentials: 'same-origin', // include, *same-origin, omit\r\n\t\t\theaders: {\r\n\t\t\t\t// 'Content-Type': 'application/json',\r\n\t\t\t\t'Content-Type': 'application/x-www-form-urlencoded'\r\n\t\t\t\t//'Content-Type', 'multipart/form-data; boundary=' + boundary\r\n\t\t\t},\r\n\t\t\tredirect: 'follow', // manual, *follow, error\r\n\t\t\treferrer: 'no-referrer', // no-referrer, *client\r\n\t\t\tbody: data, // the data type in the  body must match the value of the \"Content-Type\" header\r\n\t\t})\r\n\t\t.then(response => response.text()); // parses the JSON response into a Javascript object\r\n}\r\n\r\n// ELEMENT OFFSET COORDS\r\nfunction getCoords(elem) { // not IE8-\r\n  var box = elem.getBoundingClientRect();\r\n\r\n  return {\r\n    top: box.top + pageYOffset,\r\n    left: box.left + pageXOffset\r\n  };\r\n\r\n}\r\n\r\n// MODAL MENU\r\nconst mobileMenu = () => {\r\n\tlet btn = document.querySelector('.site-header-mobmenu'),\r\n  \tmobmenu = document.querySelector('.site-header-mobile'),\r\n\tbgoverlay = document.querySelector('.sdc-overlay');\r\n\tif (btn) {\r\n\t\tbtn.addEventListener('click', (e) => {\r\n\t\t\te.preventDefault();\r\n\t\t\tmobmenu.classList.toggle('active');\r\n      \t\tbtn.classList.toggle('active');\r\n\t\t\tif (mobmenu.classList.contains('active')) {\r\n\t\t\t\topenMenu = true;\r\n\t\t\t} else {\r\n\t\t\t\topenMenu = false;\r\n\t\t\t}\r\n\t\t\tdocument.body.classList.toggle('open');\r\n\t\t});\r\n\t\tbgoverlay.addEventListener('click', (e) => {\r\n\t\t\topenMenu = false;\r\n\t\t\tdocument.body.classList.remove('open');\r\n\t\t\tmobmenu.classList.remove('active');\r\n\t\t\tbtn.classList.remove('active');\r\n\t\t})\r\n\t}\r\n}\r\n\r\n// SEARCHFORM\r\nconst searchform = () => {\r\n\tif ( ! document.forms.searchform ) return;\r\n\tlet form = document.forms.searchform,\t\t\r\n\t\ticon = form.querySelector('.searchform-icon');\r\n\t\r\n\ticon.addEventListener('click', () => form.classList.add('searchform-show'));\r\n\r\n\tdocument.addEventListener('click', (event) => {\r\n\t\tif ( ! form.contains(event.target)) {\r\n\t\t\tform.classList.remove('searchform-show');\r\n\t\t}\r\n\t})\r\n}\r\n\r\nconst scrollPost = () => {\r\n\tif (! document.body.classList.contains('single-post')) return false;\r\n\r\n\tlet postHeader = document.querySelector('.post-header-sticky'),\r\n\t\tpostContainer = document.querySelector('.post-container'),\r\n\t\tpostHero = document.querySelector('.post-hero'),\r\n\t\tscrollPosition = 0;\r\n\r\n\twindow.addEventListener('scroll', () => {\r\n\t\tlet dist = postContainer.offsetHeight - (window.innerHeight / 2),\r\n\t\tpos = window.scrollY - getCoords(content).top,\r\n\t\tprogress = pos / dist,\r\n    range = `${progress * 100}%`;\r\n\r\n\t\tif (progress > 0.1 && progress < 1) {\r\n\r\n\t\t\tpostHeader.classList.add('sticky');\r\n\t\t\tscrollPos = document.body.getBoundingClientRect().top;\r\n\r\n\t\t} else {\r\n\t\t\t// Remove fix\r\n\t\t\tpostHeader.classList.remove('sticky')\r\n\r\n\t\t}\r\n\t});\r\n}\r\n\r\n/**\r\n * Call Functions\r\n */\r\n mobileMenu();\r\n searchform();\r\n scrollPost();"]}